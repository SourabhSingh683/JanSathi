
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { FileText, Send, CheckCircle, AlertCircle, Home, ArrowLeft } from "lucide-react";
import { Link } from "react-router-dom";
import ChatInterface from "@/components/ChatInterface";
import { generateRTIResponse, generateRTIDepartment, enhanceRTIApplication } from "@/utils/rtiAI";

interface Message {
  type: "bot" | "user";
  content: string;
  draft?: string;
  isComplete?: boolean;
}

const RTI = () => {
  const [step, setStep] = useState(0);
  const [language, setLanguage] = useState("english");
  const [isLoading, setIsLoading] = useState(false);
  const [rtiData, setRtiData] = useState({
    name: "",
    address: "",
    contact: "",
    email: "",
    issue: "",
    details: "",
    department: "",
    state: ""
  });
  const [messages, setMessages] = useState<Message[]>([
    {
      type: "bot",
      content: "üôè Namaste! I'm JAN-RTI, your digital guide for RTI (Right to Information) assistance.\n\nI'll help you draft a professional RTI application step by step.\n\nFirst, may I know your full name?"
    }
  ]);

  const handleUserMessage = async (message: string) => {
    setMessages(prev => [...prev, { type: "user", content: message }]);
    setIsLoading(true);
    
    try {
      let botResponse = "";
      
      switch(step) {
        case 0:
          setRtiData(prev => ({ ...prev, name: message }));
          botResponse = language === "english"
            ? "Thank you! Please provide your full address:"
            : "‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶! ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§™‡•Ç‡§∞‡§æ ‡§™‡§§‡§æ ‡§¶‡•á‡§Ç:";
          setStep(1);
          break;
          
        case 1:
          setRtiData(prev => ({ ...prev, address: message }));
          botResponse = language === "english"
            ? "Please provide your contact number:"
            : "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§®‡§Ç‡§¨‡§∞ ‡§¶‡•á‡§Ç:";
          setStep(2);
          break;
          
        case 2:
          setRtiData(prev => ({ ...prev, contact: message }));
          botResponse = language === "english"
            ? "Please provide your email address (optional):"
            : "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§à‡§Æ‡•á‡§≤ ‡§™‡§§‡§æ ‡§¶‡•á‡§Ç (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï):";
          setStep(3);
          break;
          
        case 3:
          setRtiData(prev => ({ ...prev, email: message }));
          botResponse = language === "english"
            ? "Which state are you from?"
            : "‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§∏‡•á ‡§π‡•à‡§Ç?";
          setStep(4);
          break;
          
        case 4:
          setRtiData(prev => ({ ...prev, state: message }));
          botResponse = language === "english"
            ? "What is the main issue you want information about?\n\n1. üèõÔ∏è Government Policy\n2. üí∞ Financial Records\n3. üèóÔ∏è Development Projects\n4. üéì Education Related\n5. üè• Healthcare Services\n6. üå± Environmental Issues\n7. üìã Public Records\n8. üö∞ Water & Sanitation\n9. ‚ö° Electricity Issues\n10. üöå Transportation\n11. üÜî Certificate Issues\n12. üíº Employment/Recruitment\n13. üè† Housing Schemes\n14. üåæ Agriculture Support\n15. üì± Digital Services\n16. üîç Other\n\nPlease choose a number or describe your issue:"
            : "‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§Æ‡•Å‡§¶‡•ç‡§¶‡•á ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?\n\n1. üèõÔ∏è ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§®‡•Ä‡§§‡§ø\n2. üí∞ ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°\n3. üèóÔ∏è ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç\n4. üéì ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä\n5. üè• ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç\n6. üå± ‡§™‡§∞‡•ç‡§Ø‡§æ‡§µ‡§∞‡§£ ‡§Æ‡•Å‡§¶‡•ç‡§¶‡•á\n7. üìã ‡§∏‡§æ‡§∞‡•ç‡§µ‡§ú‡§®‡§ø‡§ï ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°\n8. üö∞ ‡§™‡§æ‡§®‡•Ä ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ\n9. ‚ö° ‡§¨‡§ø‡§ú‡§≤‡•Ä ‡§ï‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç\n10. üöå ‡§™‡§∞‡§ø‡§µ‡§π‡§®\n11. üÜî ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞ ‡§Æ‡•Å‡§¶‡•ç‡§¶‡•á\n12. üíº ‡§∞‡•ã‡§ú‡§ó‡§æ‡§∞/‡§≠‡§∞‡•ç‡§§‡•Ä\n13. üè† ‡§Ü‡§µ‡§æ‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç\n14. üåæ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ\n15. üì± ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç\n16. üîç ‡§Ö‡§®‡•ç‡§Ø\n\n‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§®‡§Ç‡§¨‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç ‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§Æ‡•Å‡§¶‡•ç‡§¶‡§æ ‡§¨‡§§‡§æ‡§è‡§Ç:";
          setStep(5);
          break;
          
        case 5:
          const issueTypes = {
            english: [
              "Government Policy", "Financial Records", "Development Projects", 
              "Education Related", "Healthcare Services", "Environmental Issues",
              "Public Records", "Water & Sanitation", "Electricity Issues",
              "Transportation", "Certificate Issues", "Employment/Recruitment",
              "Housing Schemes", "Agriculture Support", "Digital Services", "Other"
            ],
            hindi: [
              "‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§®‡•Ä‡§§‡§ø", "‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°", "‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç",
              "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä", "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç", "‡§™‡§∞‡•ç‡§Ø‡§æ‡§µ‡§∞‡§£ ‡§Æ‡•Å‡§¶‡•ç‡§¶‡•á",
              "‡§∏‡§æ‡§∞‡•ç‡§µ‡§ú‡§®‡§ø‡§ï ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°", "‡§™‡§æ‡§®‡•Ä ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ", "‡§¨‡§ø‡§ú‡§≤‡•Ä ‡§ï‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç",
              "‡§™‡§∞‡§ø‡§µ‡§π‡§®", "‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞ ‡§Æ‡•Å‡§¶‡•ç‡§¶‡•á", "‡§∞‡•ã‡§ú‡§ó‡§æ‡§∞/‡§≠‡§∞‡•ç‡§§‡•Ä",
              "‡§Ü‡§µ‡§æ‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç", "‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ", "‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç", "‡§Ö‡§®‡•ç‡§Ø"
            ]
          };
          
          const issueIndex = parseInt(message) - 1;
          const selectedIssue = issueTypes[language][issueIndex] || message;
          setRtiData(prev => ({ ...prev, issue: selectedIssue }));
          
          botResponse = language === "english"
            ? "Please provide detailed information about what specific information you need:"
            : "‡§ï‡•É‡§™‡§Ø‡§æ ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§Ü‡§™‡§ï‡•ã ‡§ï‡•å‡§® ‡§∏‡•Ä ‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è:";
          setStep(6);
          break;
          
        case 6:
          setRtiData(prev => ({ ...prev, details: message }));
          await generateRTIDraft();
          return;
      }
      
      setMessages(prev => [...prev, { type: "bot", content: botResponse }]);
    } catch (error) {
      const errorMessage = language === 'hindi' 
        ? '‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•Å‡§õ ‡§§‡§ï‡§®‡•Ä‡§ï‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•à‡•§'
        : 'Sorry, there was a technical issue.';
      setMessages(prev => [...prev, { type: "bot", content: errorMessage }]);
    } finally {
      setIsLoading(false);
    }
  };

  const generateRTIDraft = async () => {
    try {
      // Auto-generate department
      const department = await generateRTIDepartment(rtiData.issue, language);
      const updatedRtiData = { ...rtiData, department };
      
      // Generate enhanced application body
      const enhancedBody = await enhanceRTIApplication(updatedRtiData, language);
      
      const currentData = {
        ...updatedRtiData,
        details: enhancedBody
      };
      
      const rtiId = `RTI-${Date.now()}`;
      const applicationDraft = language === "english" ? 
        `To: The Public Information Officer
${currentData.department}
${currentData.state}

Subject: Application under Right to Information Act, 2005

Respected Sir/Madam,

I, ${currentData.name}, a citizen of India, residing at ${currentData.address}, am seeking information under the Right to Information Act, 2005.

${currentData.details}

I am willing to pay the prescribed fee as per the RTI Act. If any additional fee is required, please inform me beforehand. If the information sought is not available with your office, please transfer this application to the concerned public authority under Section 6(3) of the RTI Act.

I request you to provide the information within the stipulated time period of 30 days as mandated by the RTI Act, 2005.

Contact Details:
Mobile: ${currentData.contact}
Email: ${currentData.email}

Thanking you,

${currentData.name}
Date: ${new Date().toLocaleDateString()}
Application ID: ${rtiId}` 

        : `‡§∏‡•á‡§µ‡§æ ‡§Æ‡•á‡§Ç: ‡§ú‡§® ‡§∏‡•Ç‡§ö‡§®‡§æ ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞‡•Ä
${currentData.department}
${currentData.state}

‡§µ‡§ø‡§∑‡§Ø: ‡§∏‡•Ç‡§ö‡§®‡§æ ‡§ï‡§æ ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞ ‡§Ö‡§ß‡§ø‡§®‡§ø‡§Ø‡§Æ, 2005 ‡§ï‡•á ‡§§‡§π‡§§ ‡§Ü‡§µ‡•á‡§¶‡§®

‡§Æ‡§π‡•ã‡§¶‡§Ø/‡§Æ‡§π‡•ã‡§¶‡§Ø‡§æ,

‡§Æ‡•à‡§Ç, ${currentData.name}, ‡§≠‡§æ‡§∞‡§§ ‡§ï‡§æ ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï, ‡§®‡§ø‡§µ‡§æ‡§∏‡•Ä ${currentData.address}, ‡§∏‡•Ç‡§ö‡§®‡§æ ‡§ï‡§æ ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞ ‡§Ö‡§ß‡§ø‡§®‡§ø‡§Ø‡§Æ, 2005 ‡§ï‡•á ‡§§‡§π‡§§ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ö‡§æ‡§π‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§

${currentData.details}

‡§Æ‡•à‡§Ç ‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§Ö‡§ß‡§ø‡§®‡§ø‡§Ø‡§Æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§¶‡•á‡§®‡•á ‡§ï‡•ã ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•Ç‡§Ç‡•§ ‡§Ø‡§¶‡§ø ‡§ï‡•ã‡§à ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à, ‡§§‡•ã ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§∏‡•Ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§Ø‡§¶‡§ø ‡§Æ‡§æ‡§Ç‡§ó‡•Ä ‡§ó‡§à ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§Ü‡§™‡§ï‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§≤‡§Ø ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§§‡•ã ‡§ï‡•É‡§™‡§Ø‡§æ ‡§á‡§∏ ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡•ã ‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§Ö‡§ß‡§ø‡§®‡§ø‡§Ø‡§Æ ‡§ï‡•Ä ‡§ß‡§æ‡§∞‡§æ 6(3) ‡§ï‡•á ‡§§‡§π‡§§ ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§≤‡•ã‡§ï ‡§™‡•ç‡§∞‡§æ‡§ß‡§ø‡§ï‡§∞‡§£ ‡§ï‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡§æ‡§Ç‡§§‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§

‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§∏‡•á ‡§Ö‡§®‡•Å‡§∞‡•ã‡§ß ‡§ï‡§∞‡§§‡§æ ‡§π‡•Ç‡§Ç ‡§ï‡§ø ‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§Ö‡§ß‡§ø‡§®‡§ø‡§Ø‡§Æ, 2005 ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂‡§ø‡§§ 30 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§Æ‡§æ ‡§ï‡•á ‡§≠‡•Ä‡§§‡§∞ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§

‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§µ‡§ø‡§µ‡§∞‡§£:
‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤: ${currentData.contact}
‡§à‡§Æ‡•á‡§≤: ${currentData.email}

‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶,

${currentData.name}
‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï: ${new Date().toLocaleDateString()}
‡§Ü‡§µ‡•á‡§¶‡§® ID: ${rtiId}`;

      const summary = language === "english" ? `
‚úÖ RTI APPLICATION READY

üìã Application ID: ${rtiId}
üë§ Applicant: ${currentData.name}
üèõÔ∏è Department: ${currentData.department}
üìç State: ${currentData.state}
üì± Contact: ${currentData.contact}
üìß Email: ${currentData.email}

üéØ Issue Category: ${currentData.issue}

Your RTI application has been drafted successfully!
      ` : `
‚úÖ ‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§Ü‡§µ‡•á‡§¶‡§® ‡§§‡•à‡§Ø‡§æ‡§∞

üìã ‡§Ü‡§µ‡•á‡§¶‡§® ID: ${rtiId}
üë§ ‡§Ü‡§µ‡•á‡§¶‡§ï: ${currentData.name}
üèõÔ∏è ‡§µ‡§ø‡§≠‡§æ‡§ó: ${currentData.department}
üìç ‡§∞‡§æ‡§ú‡•ç‡§Ø: ${currentData.state}
üì± ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï: ${currentData.contact}
üìß ‡§à‡§Æ‡•á‡§≤: ${currentData.email}

üéØ ‡§Æ‡•Å‡§¶‡•ç‡§¶‡§æ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: ${currentData.issue}

‡§Ü‡§™‡§ï‡§æ ‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§Ü‡§µ‡•á‡§¶‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à!
      `;

      setMessages(prev => [...prev, { 
        type: "bot", 
        content: summary,
        draft: applicationDraft,
        isComplete: true
      }]);

      // Add guidance message
      const guidanceMessage = language === "english" 
        ? "üìã **Next Steps & Required Documents:**\n\n**For RTI Filing:**\n‚Ä¢ Submit through official RTI portal or in person\n‚Ä¢ Pay prescribed fee (‚Çπ10 for central govt, varies for states)\n‚Ä¢ Keep acknowledgment receipt for tracking\n‚Ä¢ Follow up if no response in 30 days\n\n**Required Documents:**\n‚Ä¢ Copy of your ID proof\n‚Ä¢ Address proof\n‚Ä¢ Fee payment receipt\n‚Ä¢ This RTI application\n\n**Process:**\n1. Submit application with fee\n2. Get acknowledgment receipt\n3. Wait for response (30 days)\n4. Appeal if unsatisfied with response\n5. Escalate to Information Commission if needed"
        : "üìã **‡§Ö‡§ó‡§≤‡•á ‡§ï‡§¶‡§Æ ‡§î‡§∞ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú:**\n\n**‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§¶‡§æ‡§ñ‡§ø‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è:**\n‚Ä¢ ‡§Ü‡§ß‡§ø‡§ï‡§æ‡§∞‡§ø‡§ï ‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ ‡§Ø‡§æ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ú‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç\n‚Ä¢ ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§¶‡•á‡§Ç (‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§∏‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è ‚Çπ10, ‡§∞‡§æ‡§ú‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§≤‡§ó)\n‚Ä¢ ‡§ü‡•ç‡§∞‡•à‡§ï‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡§æ‡§µ‡§§‡•Ä ‡§∞‡§∏‡•Ä‡§¶ ‡§∞‡§ñ‡•á‡§Ç\n‚Ä¢ 30 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§ú‡§µ‡§æ‡§¨ ‡§® ‡§Æ‡§ø‡§≤‡•á ‡§§‡•ã ‡§´‡•â‡§≤‡•ã ‡§Ö‡§™ ‡§ï‡§∞‡•á‡§Ç\n\n**‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú:**\n‚Ä¢ ‡§Ü‡§™‡§ï‡•á ID ‡§™‡•ç‡§∞‡•Ç‡§´ ‡§ï‡•Ä ‡§ï‡•â‡§™‡•Ä\n‚Ä¢ ‡§™‡§§‡§æ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£\n‚Ä¢ ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§∞‡§∏‡•Ä‡§¶\n‚Ä¢ ‡§Ø‡§π ‡§Ü‡§∞‡§ü‡•Ä‡§Ü‡§à ‡§Ü‡§µ‡•á‡§¶‡§®\n\n**‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ:**\n1. ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ú‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç\n2. ‡§™‡§æ‡§µ‡§§‡•Ä ‡§∞‡§∏‡•Ä‡§¶ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç\n3. ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§æ ‡§á‡§Ç‡§§‡§ú‡§º‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç (30 ‡§¶‡§ø‡§®)\n4. ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§∑‡•ç‡§ü ‡§® ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§Ö‡§™‡•Ä‡§≤ ‡§ï‡§∞‡•á‡§Ç\n5. ‡§ú‡§∞‡•Ç‡§∞‡§§ ‡§™‡§°‡§º‡§®‡•á ‡§™‡§∞ ‡§∏‡•Ç‡§ö‡§®‡§æ ‡§Ü‡§Ø‡•ã‡§ó ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö‡•á‡§Ç";

      setTimeout(() => {
        setMessages(prev => [...prev, { type: "bot", content: guidanceMessage }]);
      }, 1000);

    } catch (error) {
      console.error('Error generating RTI draft:', error);
      const errorMessage = language === 'hindi' 
        ? '‡§Ü‡§µ‡•á‡§¶‡§® ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•Å‡§à‡•§'
        : 'Error generating application draft.';
      setMessages(prev => [...prev, { type: "bot", content: errorMessage }]);
    }
  };

  const handleChoiceClick = (choice: string) => {
    handleUserMessage(choice);
  };

  return (
    <div className="min-h-screen py-4 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-blue-50 to-indigo-100">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="text-center mb-6">
          <div className="flex justify-between items-center mb-4">
            <Link to="/">
              <Button variant="outline" size="sm" className="flex items-center space-x-2">
                <ArrowLeft className="w-4 h-4" />
                <span>Back to Home</span>
              </Button>
            </Link>
            <div className="flex justify-center">
              <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center">
                <FileText className="w-6 h-6 text-white" />
              </div>
            </div>
            <div className="w-20"></div> {/* Spacer for alignment */}
          </div>
          <h1 className="text-2xl md:text-4xl font-bold text-gray-900 mb-2">JAN-RTI Assistant</h1>
          <p className="text-lg md:text-xl text-gray-600">AI-powered RTI application assistance</p>
        </div>

        {/* Language Toggle */}
        <div className="flex justify-center mb-6">
          <div className="bg-white rounded-full p-1 shadow-lg border">
            <div className="flex space-x-1">
              <Button 
                variant={language === "english" ? "default" : "ghost"} 
                size="sm"
                onClick={() => setLanguage("english")}
                className={language === "english" ? "bg-blue-500 hover:bg-blue-600" : ""}
              >
                English
              </Button>
              <Button 
                variant={language === "hindi" ? "default" : "ghost"} 
                size="sm"
                onClick={() => setLanguage("hindi")}
                className={language === "hindi" ? "bg-blue-500 hover:bg-blue-600" : ""}
              >
                ‡§π‡§ø‡§Ç‡§¶‡•Ä
              </Button>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* Chat Interface - Larger */}
          <div className="lg:col-span-3">
            <Card className="shadow-xl border-0">
              <CardHeader className="bg-gradient-to-r from-blue-50 to-indigo-50">
                <CardTitle className="flex items-center space-x-2">
                  <FileText className="w-5 h-5 text-blue-600" />
                  <span>RTI Chat Assistant</span>
                  {isLoading && <div className="w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin ml-2"></div>}
                </CardTitle>
              </CardHeader>
              <CardContent className="p-0">
                <div className="p-4" style={{ height: '600px' }}>
                  <ChatInterface
                    messages={messages}
                    onSendMessage={handleUserMessage}
                    placeholder={language === "english" ? "Type your response..." : "‡§Ö‡§™‡§®‡§æ ‡§â‡§§‡•ç‡§§‡§∞ ‡§ü‡§æ‡§á‡§™ ‡§ï‡§∞‡•á‡§Ç..."}
                    language={language}
                    className="h-full"
                    isLoading={isLoading}
                  />
                  
                  {/* Quick Choice Buttons */}
                  {step === 5 && (
                    <div className="mt-4 grid grid-cols-2 md:grid-cols-4 gap-2">
                      {Array.from({length: 16}, (_, i) => (
                        <Button
                          key={i+1}
                          variant="outline"
                          size="sm"
                          onClick={() => handleChoiceClick((i+1).toString())}
                          className="text-xs"
                        >
                          {i+1}
                        </Button>
                      ))}
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Sidebar - Smaller */}
          <div className="space-y-4">
            <Card className="shadow-lg">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2 text-sm">
                  <AlertCircle className="w-4 h-4" />
                  <span>Quick Tips</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2 text-xs text-gray-600">
                  <li>‚Ä¢ Be specific about the information you need</li>
                  <li>‚Ä¢ Include relevant dates and reference numbers</li>
                  <li>‚Ä¢ Response time is usually 30 days</li>
                  <li>‚Ä¢ Keep a copy of your application</li>
                  <li>‚Ä¢ Follow up if no response received</li>
                </ul>
              </CardContent>
            </Card>

            <Card className="shadow-lg">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2 text-sm">
                  <FileText className="w-4 h-4" />
                  <span>RTI Portals</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3 text-xs">
                  <a 
                    href="https://rtionline.gov.in" 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="block p-2 bg-blue-50 rounded hover:bg-blue-100 transition-colors"
                  >
                    National RTI Portal
                  </a>
                  <a 
                    href="https://cg.gov.in/rti" 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="block p-2 bg-blue-50 rounded hover:bg-blue-100 transition-colors"
                  >
                    Chhattisgarh RTI Portal
                  </a>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RTI;
